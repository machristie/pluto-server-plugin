<project name="deployextension"  default="deploy.j2ee.web"  basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<property name="lib.dir" location="pluto-ant-tasks-libs" />
	<property name="webxml.with.portlet.mapping.file" 
		      value="${module.dir}/WEB-INF/web-portlet.xml" />
	<property name="maven.artifact.ant.url" 
		      value="http://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.0.7/maven-ant-tasks-2.0.7.jar" />
	<condition property="portletxml.exists">
		<available file="${module.dir}/WEB-INF/portlet.xml" />
	</condition>
	<condition property="pluto.ant.tasks.jar.exists">
		<available file="${lib.dir}/pluto-ant-tasks-1.1.4.jar" />
	</condition>
	
	<target name="deploy.j2ee.web">
		<copy file="${module.dir}/WEB-INF/web.xml" tofile="${webxml.with.portlet.mapping.file}" />
		<antcall target="assemble" />
		<war destfile="${project.working.dir}/${module.name}.war" 
			 webxml="${webxml.with.portlet.mapping.file}">
			<zipfileset dir="${module.dir}">
	        	<include name="**/*.*"/>
				<exclude name="**/*.war"/>
				<exclude name="**/web.xml"/>
			</zipfileset>
		</war>
  		<move file="${project.working.dir}/${module.name}.war" todir="${server.publish.dir}"/>
	</target>

    <target name="assemble" if="portletxml.exists" depends="maven-init">
        <taskdef name="assemble" classname="org.apache.pluto.ant.AssembleTask">
        	<classpath>
    			<fileset dir="${lib.dir}" includes="*.jar" />
        	</classpath>
    	</taskdef>
        <assemble webxml="${module.dir}/WEB-INF/web.xml" 
        	      portletxml="${module.dir}/WEB-INF/portlet.xml" 
        	      destfile="${webxml.with.portlet.mapping.file}" />
    </target>
	
	
	<target name="deploy.j2ee.ejb">
		<jar destfile="${project.working.dir}/${module.name}.jar"> 
			<zipfileset dir="${module.dir}">
	        	<include name="**/*.*"/>
	       		<exclude name="**/*.java"/>
			</zipfileset>
		</jar>
  		<move file="${project.working.dir}/${module.name}.jar" todir="${server.publish.dir}"/>
	</target>
	<target name="deploy.j2ee.ear">
		<jar destfile="${project.working.dir}/${module.name}.ear"> 
			<zipfileset dir="${module.dir}">
	        	<include name="**/*.*"/>
	       		<exclude name="**/*.java"/>
			</zipfileset>
		</jar>
  		<move file="${project.working.dir}/${module.name}.ear" todir="${server.publish.dir}"/>
	</target>
	
	<target name="undeploy.j2ee.web">
		<delete file="${server.publish.dir}/${module.name}.war"> </delete>
	</target>
	<target name="undeploy.j2ee.ejb">
		<delete file="${server.publish.dir}/${module.name}.jar"> </delete>
	</target>
	<target name="undeploy.j2ee.ear">
		<delete file="${server.publish.dir}/${module.name}.ear"> </delete>
	</target>
	
    <!-- MAVEN RELATED TASKS -->
    <target name="maven-init">
        <mkdir dir="${lib.dir}/maven" />
        <get src="${maven.artifact.ant.url}" 
        	 dest="${lib.dir}/maven/maven-artifact-ant-dep.jar" 
        	 usetimestamp="true" ignoreerrors="true" />

        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
            <classpath>
                <pathelement location="${lib.dir}/maven/maven-artifact-ant-dep.jar" />
            </classpath>
        </typedef>
        
        <!-- hack needed if user doesn't already have a Maven2 local repository -->
        <mkdir dir="${user.home}/.m2/repository" />

        <antcall target="maven-dependencies" />

    </target>

    <target name="maven-dependencies" unless="pluto.ant.tasks.jar.exists">
        <artifact:dependencies filesetId="maven.dependencies.fileset">
        	<dependency groupId="org.apache.pluto" 
        		        artifactId="pluto-ant-tasks"
        	            version="1.1.4"/>            
        </artifact:dependencies>

        <!-- delete previously downloaded dependencies -->
        <delete>
            <fileset dir="${lib.dir}">
                <exclude name="maven/**" />
            </fileset>
        </delete>

        <mkdir dir="${lib.dir}" />
        <copy todir="${lib.dir}">
            <fileset refid="maven.dependencies.fileset" />
            <mapper type="flatten" />
        </copy>
    </target>
	
</project>